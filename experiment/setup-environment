#!/usr/bin/env python

import sys
import json

### install hostsfile and set up firewall rules

# Usage:
# wget -O or_addresses.json https://onionoo.torproject.org/details?fields=or_addresses
# ./gen-firewall < or_addresses.json

# Alternate onionoo download: https://onionoo.thecthulhu.com/details?fields=or_addresses

def read_addresses_from_json(f):
    j = json.load(f)
    addresses = []
    for relay in j["relays"]:
        for or_address in relay["or_addresses"]:
            addr, port = or_address.rsplit(":", 1)
            addr = addr.strip("[]")
            addresses.append(addr)
    return addresses

# How to use the "netsh advfirewall firewall" context instead of the "netsh
# firewall" context to control Windows Firewall behavior in Windows Server 2008
# and in Windows Vista
# https://support.microsoft.com/en-us/kb/947709

def block_ips(ips, name):
    num_addresses = len(ips) 
    for i in range (0,num_addresses,500):
        slice = ips[i:i+500]
        print >> batch_file, "netsh advfirewall firewall add rule name=\"%s\" dir=out action=block remoteip=%s" % (name, ",".join(slice))

# https://gitweb.torproject.org/builders/tor-browser-bundle.git/tree/Bundle-Data/PTConfigs/bridge_prefs.js?id=tbb-5.0.3-build3
torbrowser_addresses = [
    "83.212.101.3",
    "169.229.59.74",
    "169.229.59.75",
    "109.105.109.163",
    "109.105.109.163",
    "192.240.101.106",
    "50.7.176.114",
    "131.252.210.150",
    "128.105.214.161",
    "128.105.214.162",
    "128.105.214.163",
    "2001:49f0:d002:1::2",
    "2001:49f0:d00a:1::c",
    "188.226.213.208",
    "83.212.101.3",
    "178.209.52.110",
    "83.212.101.3",
    "104.131.108.182",
]

# Install to C:\Windows\System32\drivers\etc\hosts
# aka
#          %SystemRoot%\System32\drivers\etc\hosts

BASE_DOMAINS = [
    "torproject",
    "google",
    "youtube",
    "amazon",
    "yahoo",
    "wikipedia",
    "twitter",
    "bing",
]

SUBDOMAINS = { 
    "torproject":["www","m","bridges",],
    "google":["www","m","search","maps",],
    "youtube":["www","m",],
    "amazon":["www","m"],
    "yahoo":["www","m",],
    "wikipedia":["www","m",],
    "twitter":["www","m",],
    "bing":["www","m","maps",],
}


TLDS = [
    "com", "org", "net",
    "af", "ax", "al", "dz", "as", "ad", "ao", "ai", "aq", "ag", "ar", "am", "aw",
    "au", "at", "az", "bs", "bh", "bd", "bb", "by", "be", "bz", "bj", "bm", "bt",
    "bo", "bq", "ba", "bw", "bv", "br", "io", "bn", "bg", "bf", "bi", "kh", "cm",
    "ca", "cv", "ky", "cf", "td", "cl", "cn", "cx", "cc", "co", "km", "cg", "cd",
    "ck", "cr", "ci", "hr", "cu", "cw", "cy", "cz", "dk", "dj", "dm", "do", "ec",
    "eg", "sv", "gq", "er", "ee", "et", "fk", "fo", "fj", "fi", "fr", "gf", "pf",
    "tf", "ga", "gm", "ge", "de", "gh", "gi", "gr", "gl", "gd", "gp", "gu", "gt",
    "gg", "gn", "gw", "gy", "ht", "hm", "va", "hn", "hk", "hu", "is", "in", "id",
    "ir", "iq", "ie", "im", "il", "it", "jm", "jp", "je", "jo", "kz", "ke", "ki",
    "kp", "kr", "kw", "kg", "la", "lv", "lb", "ls", "lr", "ly", "li", "lt", "lu",
    "mo", "mk", "mg", "mw", "my", "mv", "ml", "mt", "mh", "mq", "mr", "mu", "yt",
    "mx", "fm", "md", "mc", "mn", "me", "ms", "ma", "mz", "mm", "na", "nr", "np",
    "nl", "nc", "nz", "ni", "ne", "ng", "nu", "nf", "mp", "no", "om", "pk", "pw",
    "ps", "pa", "pg", "py", "pe", "ph", "pn", "pl", "pt", "pr", "qa", "re", "ro",
    "ru", "rw", "bl", "sh", "kn", "lc", "mf", "pm", "vc", "ws", "sm", "st", "sa",
    "sn", "rs", "sc", "sl", "sg", "sx", "sk", "si", "sb", "so", "za", "gs", "ss",
    "es", "lk", "sd", "sr", "sj", "sz", "se", "ch", "sy", "tw", "tj", "tz", "th",
    "tl", "tg", "tk", "to", "tt", "tn", "tr", "tm", "tc", "tv", "ug", "ua", "ae",
    "gb", "us", "um", "uy", "uz", "vu", "ve", "vn", "vg", "vi", "wf", "eh", "ye",
    "zm", "zw",
]

def make_hostfile():
    for base_domain in BASE_DOMAINS:
        for tld in TLDS:
            print >> hosts_file, "127.0.0.1\t%s" % ".".join([base_domain, tld])
            for sub_domain in SUBDOMAINS[base_domain]:
                print >> hosts_file, "127.0.0.1\t%s" % ".".join([sub_domain, base_domain, tld])

level = int(sys.argv[1])

batch_file = open("batch-file.bat","w")
hosts_file = open("hosts","w")
or_addresses_file = open("or_addresses.json","r")

if level == 3: 
    #block tor, hardcoded relays, and generate a hostfile
    addresses = read_addresses_from_json(or_addresses_file)
    block_ips(addresses, "Tor relays")
    block_ips(torbrowser_addresses, "Tor browser bridges")
    make_hostfile()
    print >> batch_file, "copy hosts %SystemRoot%\System32\drivers\etc\hosts" 
elif level == 2: 
    #block tor and generte a hostfile
    addresses = read_addresses_from_json(or_addresses_file)
    block_ips(addresses, "Tor relays")
    make_hostfile()
    print >> batch_file, "copy hosts %SystemRoot%\System32\drivers\etc\hosts" 
elif level == 1: 
    #generate a hostfile
    make_hostfile()
    print >> batch_file, "copy hosts %SystemRoot%\System32\drivers\etc\hosts" 
else:
    assert False 

### install Tor Browser

### install VLC

### add a link to the survey on the desktop

### put IE, Firefox, Chrome on the desktop

### start screen recording 



