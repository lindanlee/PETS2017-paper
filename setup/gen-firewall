#!/usr/bin/env python

import json
import sys

# Usage:
# wget -O or_addresses.json https://onionoo.torproject.org/details?fields=or_addresses
# ./gen-firewall < or_addresses.json

# Alternate onionoo download: https://onionoo.thecthulhu.com/details?fields=or_addresses

def read_addresses_from_json(f):
    j = json.load(f)
    addresses = []
    for relay in j["relays"]:
        for or_address in relay["or_addresses"]:
            addr, port = or_address.rsplit(":", 1)
            addresses.append(addr)
    return addresses

# How to use the "netsh advfirewall firewall" context instead of the "netsh
# firewall" context to control Windows Firewall behavior in Windows Server 2008
# and in Windows Vista
# https://support.microsoft.com/en-us/kb/947709
def block_ips(ips, name):
    print "netsh advfirewall firewall add rule name=\"%s\" dir=out action=block remoteip=%s" % (name, ",".join(ips))

# https://gitweb.torproject.org/builders/tor-browser-bundle.git/tree/Bundle-Data/PTConfigs/bridge_prefs.js?id=tbb-5.0.3-build3
torbrowser_addresses = [
    "83.212.101.3",
    "169.229.59.74",
    "169.229.59.75",
    "109.105.109.163",
    "109.105.109.163",
    "192.240.101.106",
    "50.7.176.114",
    "131.252.210.150",
    "128.105.214.161",
    "128.105.214.162",
    "128.105.214.163",
    "[2001:49f0:d002:1::2]",
    "[2001:49f0:d00a:1::c]",
    "188.226.213.208",
    "83.212.101.3",
    "178.209.52.110",
    "83.212.101.3",
    "104.131.108.182",
]

addresses = read_addresses_from_json(sys.stdin)
block_ips(addresses, "Tor relays")
block_ips(torbrowser_addresses, "Tor browser bridges")
